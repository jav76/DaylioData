# This workflow will publish a nuget package
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publish

on:
  pull_request:
    types: [ closed ]
    branches: [ "main" ]

  release:

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    
    runs-on: windows-latest
    steps:

    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore Dependencies
      run: dotnet restore

    - name: Update Version Info
      run: |
        $projPath = "src\DaylioData\DaylioData.csproj"
        $buildNumber = ${{ github.run_number }}
        $content = Get-Content -path $projPath -Raw
        if ($content -match '<AssemblyVersion>(\d+.\d+.\d+).\d+</AssemblyVersion>')
        {
          $newVersion = "`$1.$buildNumber"
          $content -replace '<AssemblyVersion>\d+.\d+.\d+.\d+</AssemblyVersion>', "<AssemblyVersion>$newVersion</AssemblyVersion>" | Set-Content -Path $projPath
        }
        if ($content -match '<AssemblyVersion>(\d+.\d+.\d+).\d+</AssemblyVersion>')
        {
          $newVersion = "`$1.$buildNumber"
          $content -replace '<Version>\d+.\d+.\d+.\d+</Version>', "<Version>$newVersion</Version>" | Set-Content -Path $projPath
        }


    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --no-restore --verbosity normal

    - name: Pack
      run: dotnet pack --no-build --configuration Release --output BuildResults

    - name: Push
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push BuildResults\*.nupkg --source "https://api.nuget.org/v3/index.json" --api-key "$env:NUGET_AUTH_TOKEN"
